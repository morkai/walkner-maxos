// Copyright (c) 2014, ≈Åukasz Walukiewicz <lukasz@walukiewicz.eu>. Some Rights Reserved.
// Licensed under CC BY-NC-SA 4.0 <http://creativecommons.org/licenses/by-nc-sa/4.0/>.
// Part of the walkner-hydro project <http://lukasz.walukiewicz.eu/p/walkner-hydro>

define(["underscore","h5.rql/index","app/i18n","app/time","app/core/Model","app/core/View","app/core/util/bindLoadingMessage","app/data/controller","../views/ChartsFilterView","../views/ChartsChartView","app/analytics/templates/chartsPage"],function(t,e,i,r,a,s,l,o,n,h,d){"use strict";return s.extend({template:d,layoutName:"page",breadcrumbs:[i.bound("analytics","BREADCRUMBS:base"),i.bound("analytics","BREADCRUMBS:charts")],initialize:function(){this.rqlQuery=e.Query.fromObject(this.options.rqlQuery),this.model=t.extend(l(new a(this.rqlToAttrs()),this),{url:function(){return"/tags/"+this.get("tag")+"/metric?start="+this.get("from")+"&stop="+(this.get("to")||0)+"&valueField="+(this.get("valueField")||"")+"&deltaField="+(this.get("deltaField")||"")}}),this.filterView=new n({model:{rqlQuery:this.rqlQuery}}),this.chartView=new h({model:this.model}),this.listenTo(this.filterView,"filterChanged",this.onFilterChanged),this.setView("#"+this.idPrefix+"-filter",this.filterView),this.setView("#"+this.idPrefix+"-chart",this.chartView)},load:function(t){return t(o.load())},afterRender:function(){this.model.get("tag")&&this.model.fetch()},rqlToAttrs:function(){var e={values:[],deltas:[],to:null,valueField:"avg",deltaField:""};if(t.forEach(this.rqlQuery.selector.args,function(t){"eq"===t.name&&"tag"===t.args[0]?e.tag=t.args[1]:"ge"===t.name&&"time"===t.args[0]?e.from=t.args[1]:"lt"===t.name&&"time"===t.args[0]&&(e.to=t.args[1])}),(!e.from||e.from<0)&&(e.from=r.getMoment().subtract(24,"hours").startOf("minute").valueOf(),e.to=r.getMoment().startOf("minute").valueOf()),e.to||(e.to=r.getMoment().startOf("minute").valueOf()),e.from>e.to){var i=e.from;e.from=e.to,e.to=i}return/(sum|websockets)$/.test(e.tag)?(e.valueField="max",e.deltaField="max"):e.deltaField="avg",e},onFilterChanged:function(t){this.rqlQuery=t,this.model.set(this.rqlToAttrs()),this.model.fetch(),this.broker.publish("router.navigate",{url:"/analytics/charts?tag="+this.model.get("tag")+"&time>="+this.model.get("from")+"&time<"+this.model.get("to"),trigger:!1,replace:!0})}})});