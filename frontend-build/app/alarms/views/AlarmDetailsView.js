// Part of <https://miracle.systems/p/walkner-maxos> licensed under <CC BY-NC-SA 4.0>

define(["underscore","app/i18n","app/core/View","app/core/util/onModelDeleted","../Alarm","app/alarms/templates/details","app/alarms/templates/messageActionDetails","app/alarms/templates/severityActionDetails","app/alarms/templates/callActionDetails"],function(e,t,a,i,r,s,l,n,d){"use strict";return a.extend({template:s,remoteTopics:{"alarms.run":function(e){this.updateAlarmModel(e.model,{state:r.State.RUNNING,severity:null,actionIndex:-1})},"alarms.stopped":function(e){this.updateAlarmModel(e.model,{state:r.State.STOPPED,severity:null,actionIndex:-1})},"alarms.acked":function(e){this.updateAlarmModel(e.model,{state:r.State.RUNNING,severity:null,actionIndex:-1})},"alarms.activated":function(e){this.updateAlarmModel(e.model,{state:r.State.ACTIVE})},"alarms.deactivated":function(e){this.updateAlarmModel(e.model,{state:r.State.RUNNING,severity:null,actionIndex:-1})},"alarms.actionExecuted":function(e){this.updateAlarmModel(e.model,{severity:e.action.severity,actionIndex:e.action.no-1})},"alarms.edited":function(e){this.updateAlarmModel(e.model,e.model)},"alarms.deleted":function(e){i(this.broker,this.model.alarm,e)}},initialize:function(){this.listenTo(this.model.alarm,"change",e.after(1,this.render.bind(this)))},serialize:function(){var e=this.model.alarm.serialize();return{idPrefix:this.idPrefix,alarm:e,startActions:this.serializeActions(e.startActions)}},serializeActions:function(t){return t.map(function(t){switch(t.type){case"sms":case"email":return e.isArray(t.parameters.users)&&(t.parameters.users=t.parameters.users.map(function(e){return'<a href="#users/'+e.id+'">'+e.label+"</a>"}).join(", ")),t.render=l.bind(null,t),t;case"call":return e.isArray(t.parameters.users)&&(t.parameters.users=t.parameters.users.map(function(e){return'<a href="#users/'+e.id+'">'+e.label+"</a>"}).join(", ")),t.render=d.bind(null,t),t;default:return t.render=n.bind(null,t),t}}).filter(function(e){return!!e})},afterRender:function(){-1!==this.model.alarm.get("actionIndex")&&this.$(".alarms-details-action").eq(this.model.alarm.get("actionIndex")).addClass("active")},updateAlarmModel:function(e,t){e._id===this.model.alarm.id&&this.model.alarm.set(t)}})});